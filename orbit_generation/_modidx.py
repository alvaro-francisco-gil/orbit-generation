# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/orbit-generation',
                'doc_host': 'https://alvaro-francisco-gil.github.io',
                'git_url': 'https://github.com/alvaro-francisco-gil/orbit-generation',
                'lib_path': 'orbit_generation'},
  'syms': { 'orbit_generation.architectures': { 'orbit_generation.architectures.Conv5Decoder': ( 'architectures.html#conv5decoder',
                                                                                                 'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5Decoder.__init__': ( 'architectures.html#conv5decoder.__init__',
                                                                                                          'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5Decoder.forward': ( 'architectures.html#conv5decoder.forward',
                                                                                                         'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5DecoderLegitTsgm': ( 'architectures.html#conv5decoderlegittsgm',
                                                                                                          'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5DecoderLegitTsgm.__init__': ( 'architectures.html#conv5decoderlegittsgm.__init__',
                                                                                                                   'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5DecoderLegitTsgm.decode': ( 'architectures.html#conv5decoderlegittsgm.decode',
                                                                                                                 'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5Encoder': ( 'architectures.html#conv5encoder',
                                                                                                 'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5Encoder.__init__': ( 'architectures.html#conv5encoder.__init__',
                                                                                                          'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5Encoder.encode': ( 'architectures.html#conv5encoder.encode',
                                                                                                        'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5EncoderLegitTsgm': ( 'architectures.html#conv5encoderlegittsgm',
                                                                                                          'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5EncoderLegitTsgm.__init__': ( 'architectures.html#conv5encoderlegittsgm.__init__',
                                                                                                                   'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Conv5EncoderLegitTsgm.encode': ( 'architectures.html#conv5encoderlegittsgm.encode',
                                                                                                                 'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Inception': ( 'architectures.html#inception',
                                                                                              'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Inception.__init__': ( 'architectures.html#inception.__init__',
                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Inception.forward': ( 'architectures.html#inception.forward',
                                                                                                      'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionBlock': ( 'architectures.html#inceptionblock',
                                                                                                   'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionBlock.__init__': ( 'architectures.html#inceptionblock.__init__',
                                                                                                            'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionBlock.forward': ( 'architectures.html#inceptionblock.forward',
                                                                                                           'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionBlockWithoutPool': ( 'architectures.html#inceptionblockwithoutpool',
                                                                                                              'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionBlockWithoutPool.__init__': ( 'architectures.html#inceptionblockwithoutpool.__init__',
                                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionBlockWithoutPool.forward': ( 'architectures.html#inceptionblockwithoutpool.forward',
                                                                                                                      'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTimeVAEEncoder': ( 'architectures.html#inceptiontimevaeencoder',
                                                                                                            'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTimeVAEEncoder.__init__': ( 'architectures.html#inceptiontimevaeencoder.__init__',
                                                                                                                     'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTimeVAEEncoder.encode': ( 'architectures.html#inceptiontimevaeencoder.encode',
                                                                                                                   'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTransposeBlockWithoutPool': ( 'architectures.html#inceptiontransposeblockwithoutpool',
                                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTransposeBlockWithoutPool.__init__': ( 'architectures.html#inceptiontransposeblockwithoutpool.__init__',
                                                                                                                                'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTransposeBlockWithoutPool.forward': ( 'architectures.html#inceptiontransposeblockwithoutpool.forward',
                                                                                                                               'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTransposeWithoutPool': ( 'architectures.html#inceptiontransposewithoutpool',
                                                                                                                  'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTransposeWithoutPool.__init__': ( 'architectures.html#inceptiontransposewithoutpool.__init__',
                                                                                                                           'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionTransposeWithoutPool.forward': ( 'architectures.html#inceptiontransposewithoutpool.forward',
                                                                                                                          'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionWithoutPool': ( 'architectures.html#inceptionwithoutpool',
                                                                                                         'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionWithoutPool.__init__': ( 'architectures.html#inceptionwithoutpool.__init__',
                                                                                                                  'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.InceptionWithoutPool.forward': ( 'architectures.html#inceptionwithoutpool.forward',
                                                                                                                 'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Sampling': ( 'architectures.html#sampling',
                                                                                             'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.Sampling.forward': ( 'architectures.html#sampling.forward',
                                                                                                     'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEDecoder': ( 'architectures.html#vaedecoder',
                                                                                               'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEDecoder.__init__': ( 'architectures.html#vaedecoder.__init__',
                                                                                                        'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEDecoder.decode': ( 'architectures.html#vaedecoder.decode',
                                                                                                      'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEDecoder.forward': ( 'architectures.html#vaedecoder.forward',
                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEEncoder': ( 'architectures.html#vaeencoder',
                                                                                               'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEEncoder.__init__': ( 'architectures.html#vaeencoder.__init__',
                                                                                                        'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEEncoder.encode': ( 'architectures.html#vaeencoder.encode',
                                                                                                      'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAEEncoder.forward': ( 'architectures.html#vaeencoder.forward',
                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAELossHistory': ( 'architectures.html#vaelosshistory',
                                                                                                   'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAELossHistory.__init__': ( 'architectures.html#vaelosshistory.__init__',
                                                                                                            'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAELossHistory.on_train_epoch_end': ( 'architectures.html#vaelosshistory.on_train_epoch_end',
                                                                                                                      'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAELossHistory.on_validation_epoch_end': ( 'architectures.html#vaelosshistory.on_validation_epoch_end',
                                                                                                                           'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAELossHistory.plot_all_losses': ( 'architectures.html#vaelosshistory.plot_all_losses',
                                                                                                                   'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.VAELossHistory.plot_total_losses': ( 'architectures.html#vaelosshistory.plot_total_losses',
                                                                                                                     'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.WPInceptionTimeVAEDecoder': ( 'architectures.html#wpinceptiontimevaedecoder',
                                                                                                              'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.WPInceptionTimeVAEDecoder.__init__': ( 'architectures.html#wpinceptiontimevaedecoder.__init__',
                                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.WPInceptionTimeVAEDecoder.decode': ( 'architectures.html#wpinceptiontimevaedecoder.decode',
                                                                                                                     'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.WPInceptionTimeVAEEncoder': ( 'architectures.html#wpinceptiontimevaeencoder',
                                                                                                              'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.WPInceptionTimeVAEEncoder.__init__': ( 'architectures.html#wpinceptiontimevaeencoder.__init__',
                                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.WPInceptionTimeVAEEncoder.encode': ( 'architectures.html#wpinceptiontimevaeencoder.encode',
                                                                                                                     'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cConv5DecoderLegitTsgm': ( 'architectures.html#cconv5decoderlegittsgm',
                                                                                                           'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cConv5DecoderLegitTsgm.__init__': ( 'architectures.html#cconv5decoderlegittsgm.__init__',
                                                                                                                    'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cConv5DecoderLegitTsgm.decode': ( 'architectures.html#cconv5decoderlegittsgm.decode',
                                                                                                                  'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cConv5EncoderLegitTsgm': ( 'architectures.html#cconv5encoderlegittsgm',
                                                                                                           'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cConv5EncoderLegitTsgm.__init__': ( 'architectures.html#cconv5encoderlegittsgm.__init__',
                                                                                                                    'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cConv5EncoderLegitTsgm.encode': ( 'architectures.html#cconv5encoderlegittsgm.encode',
                                                                                                                  'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEDecoder': ( 'architectures.html#cvaedecoder',
                                                                                                'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEDecoder.__init__': ( 'architectures.html#cvaedecoder.__init__',
                                                                                                         'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEDecoder.decode': ( 'architectures.html#cvaedecoder.decode',
                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEDecoder.forward': ( 'architectures.html#cvaedecoder.forward',
                                                                                                        'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEEncoder': ( 'architectures.html#cvaeencoder',
                                                                                                'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEEncoder.__init__': ( 'architectures.html#cvaeencoder.__init__',
                                                                                                         'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEEncoder.encode': ( 'architectures.html#cvaeencoder.encode',
                                                                                                       'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.cVAEEncoder.forward': ( 'architectures.html#cvaeencoder.forward',
                                                                                                        'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.correct_sizes': ( 'architectures.html#correct_sizes',
                                                                                                  'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.get_conditional_conv5_legit_tsgm_vae_components': ( 'architectures.html#get_conditional_conv5_legit_tsgm_vae_components',
                                                                                                                                    'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.get_conv5_legit_tsgm_vae_components': ( 'architectures.html#get_conv5_legit_tsgm_vae_components',
                                                                                                                        'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.get_conv5_vae_components': ( 'architectures.html#get_conv5_vae_components',
                                                                                                             'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.get_inception_time_vae_components': ( 'architectures.html#get_inception_time_vae_components',
                                                                                                                      'orbit_generation/architectures.py'),
                                                'orbit_generation.architectures.pass_through': ( 'architectures.html#pass_through',
                                                                                                 'orbit_generation/architectures.py')},
            'orbit_generation.constants': {},
            'orbit_generation.convergence': { 'orbit_generation.convergence.create_converged_orbits_df': ( 'convergence.html#create_converged_orbits_df',
                                                                                                           'orbit_generation/convergence.py'),
                                              'orbit_generation.convergence.differential_correction': ( 'convergence.html#differential_correction',
                                                                                                        'orbit_generation/convergence.py'),
                                              'orbit_generation.convergence.process_diferential_correction_orbits': ( 'convergence.html#process_diferential_correction_orbits',
                                                                                                                      'orbit_generation/convergence.py')},
            'orbit_generation.data': { 'orbit_generation.data.TSFeatureWiseScaler': ( 'data.html#tsfeaturewisescaler',
                                                                                      'orbit_generation/data.py'),
                                       'orbit_generation.data.TSFeatureWiseScaler.__init__': ( 'data.html#tsfeaturewisescaler.__init__',
                                                                                               'orbit_generation/data.py'),
                                       'orbit_generation.data.TSFeatureWiseScaler.fit': ( 'data.html#tsfeaturewisescaler.fit',
                                                                                          'orbit_generation/data.py'),
                                       'orbit_generation.data.TSFeatureWiseScaler.fit_transform': ( 'data.html#tsfeaturewisescaler.fit_transform',
                                                                                                    'orbit_generation/data.py'),
                                       'orbit_generation.data.TSFeatureWiseScaler.inverse_transform': ( 'data.html#tsfeaturewisescaler.inverse_transform',
                                                                                                        'orbit_generation/data.py'),
                                       'orbit_generation.data.TSFeatureWiseScaler.transform': ( 'data.html#tsfeaturewisescaler.transform',
                                                                                                'orbit_generation/data.py'),
                                       'orbit_generation.data.TSGlobalScaler': ('data.html#tsglobalscaler', 'orbit_generation/data.py'),
                                       'orbit_generation.data.TSGlobalScaler.fit': ( 'data.html#tsglobalscaler.fit',
                                                                                     'orbit_generation/data.py'),
                                       'orbit_generation.data.TSGlobalScaler.fit_transform': ( 'data.html#tsglobalscaler.fit_transform',
                                                                                               'orbit_generation/data.py'),
                                       'orbit_generation.data.TSGlobalScaler.inverse_transform': ( 'data.html#tsglobalscaler.inverse_transform',
                                                                                                   'orbit_generation/data.py'),
                                       'orbit_generation.data.TSGlobalScaler.transform': ( 'data.html#tsglobalscaler.transform',
                                                                                           'orbit_generation/data.py'),
                                       'orbit_generation.data.create_dataloaders': ( 'data.html#create_dataloaders',
                                                                                     'orbit_generation/data.py'),
                                       'orbit_generation.data.discard_random_labels': ( 'data.html#discard_random_labels',
                                                                                        'orbit_generation/data.py'),
                                       'orbit_generation.data.get_example_orbit_data': ( 'data.html#get_example_orbit_data',
                                                                                         'orbit_generation/data.py'),
                                       'orbit_generation.data.get_orbit_features': ( 'data.html#get_orbit_features',
                                                                                     'orbit_generation/data.py'),
                                       'orbit_generation.data.load_memmap_array': ( 'data.html#load_memmap_array',
                                                                                    'orbit_generation/data.py'),
                                       'orbit_generation.data.load_orbit_data': ('data.html#load_orbit_data', 'orbit_generation/data.py'),
                                       'orbit_generation.data.order_labels_and_array_with_target': ( 'data.html#order_labels_and_array_with_target',
                                                                                                     'orbit_generation/data.py'),
                                       'orbit_generation.data.remove_duplicates_preserve_order': ( 'data.html#remove_duplicates_preserve_order',
                                                                                                   'orbit_generation/data.py'),
                                       'orbit_generation.data.sample_orbits': ('data.html#sample_orbits', 'orbit_generation/data.py'),
                                       'orbit_generation.data.save_data': ('data.html#save_data', 'orbit_generation/data.py')},
            'orbit_generation.dataset': { 'orbit_generation.dataset.get_first_period_dataset': ( 'dataset.html#get_first_period_dataset',
                                                                                                 'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_first_period_dataset_all_systems': ( 'dataset.html#get_first_period_dataset_all_systems',
                                                                                                             'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_first_period_fixed_step_dataset': ( 'dataset.html#get_first_period_fixed_step_dataset',
                                                                                                            'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_first_period_of_fixed_period_dataset': ( 'dataset.html#get_first_period_of_fixed_period_dataset',
                                                                                                                 'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_full_fixed_step_dataset': ( 'dataset.html#get_full_fixed_step_dataset',
                                                                                                    'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_orbit_classes': ( 'dataset.html#get_orbit_classes',
                                                                                          'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_orbit_data_from_hdf5': ( 'dataset.html#get_orbit_data_from_hdf5',
                                                                                                 'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_orbit_features_from_folder': ( 'dataset.html#get_orbit_features_from_folder',
                                                                                                       'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_orbit_features_from_hdf5': ( 'dataset.html#get_orbit_features_from_hdf5',
                                                                                                     'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_periods_of_orbit_dict': ( 'dataset.html#get_periods_of_orbit_dict',
                                                                                                  'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.get_system_constants': ( 'dataset.html#get_system_constants',
                                                                                             'orbit_generation/dataset.py'),
                                          'orbit_generation.dataset.substitute_values_from_df': ( 'dataset.html#substitute_values_from_df',
                                                                                                  'orbit_generation/dataset.py')},
            'orbit_generation.evaluation': { 'orbit_generation.evaluation.calculate_distance': ( 'evaluation.html#calculate_distance',
                                                                                                 'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.calculate_distances_batch': ( 'evaluation.html#calculate_distances_batch',
                                                                                                        'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.calculate_pairwise_distances': ( 'evaluation.html#calculate_pairwise_distances',
                                                                                                           'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.calculate_pairwise_orbit_distances': ( 'evaluation.html#calculate_pairwise_orbit_distances',
                                                                                                                 'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.cosine_distance': ( 'evaluation.html#cosine_distance',
                                                                                              'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.dtw_distance': ( 'evaluation.html#dtw_distance',
                                                                                           'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.euclidean_distance': ( 'evaluation.html#euclidean_distance',
                                                                                                 'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.evaluate_clustering_multiple_labels': ( 'evaluation.html#evaluate_clustering_multiple_labels',
                                                                                                                  'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.evaluate_distance_metrics_and_clustering': ( 'evaluation.html#evaluate_distance_metrics_and_clustering',
                                                                                                                       'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.find_nearest_orbits': ( 'evaluation.html#find_nearest_orbits',
                                                                                                  'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.find_nearest_orbits_batch': ( 'evaluation.html#find_nearest_orbits_batch',
                                                                                                        'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.find_nearest_points': ( 'evaluation.html#find_nearest_points',
                                                                                                  'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.find_nearest_points_batch': ( 'evaluation.html#find_nearest_points_batch',
                                                                                                        'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.find_non_matching_elements': ( 'evaluation.html#find_non_matching_elements',
                                                                                                         'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.machine_learning_evaluation': ( 'evaluation.html#machine_learning_evaluation',
                                                                                                          'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.manhattan_distance': ( 'evaluation.html#manhattan_distance',
                                                                                                 'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.orbits_distances': ( 'evaluation.html#orbits_distances',
                                                                                               'orbit_generation/evaluation.py'),
                                             'orbit_generation.evaluation.plot_metric_heatmaps': ( 'evaluation.html#plot_metric_heatmaps',
                                                                                                   'orbit_generation/evaluation.py')},
            'orbit_generation.experiment': { 'orbit_generation.experiment.add_experiment_metrics': ( 'experiment.html#add_experiment_metrics',
                                                                                                     'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.concatenate_and_check_orbits_from_experiment_folder': ( 'experiment.html#concatenate_and_check_orbits_from_experiment_folder',
                                                                                                                                  'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.concatenate_csvs_from_experiment_folder': ( 'experiment.html#concatenate_csvs_from_experiment_folder',
                                                                                                                      'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.concatenate_orbits_from_experiment_folder': ( 'experiment.html#concatenate_orbits_from_experiment_folder',
                                                                                                                        'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.convert_numpy_types': ( 'experiment.html#convert_numpy_types',
                                                                                                  'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.create_experiments_json': ( 'experiment.html#create_experiments_json',
                                                                                                      'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.execute_parameter_notebook': ( 'experiment.html#execute_parameter_notebook',
                                                                                                         'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.generate_file_paths': ( 'experiment.html#generate_file_paths',
                                                                                                  'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.generate_image_paths': ( 'experiment.html#generate_image_paths',
                                                                                                   'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.generate_parameter_sets': ( 'experiment.html#generate_parameter_sets',
                                                                                                      'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.get_experiment_data': ( 'experiment.html#get_experiment_data',
                                                                                                  'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.get_experiment_parameters': ( 'experiment.html#get_experiment_parameters',
                                                                                                        'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.paralelize_notebook_experiment': ( 'experiment.html#paralelize_notebook_experiment',
                                                                                                             'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.prepare_and_train_model': ( 'experiment.html#prepare_and_train_model',
                                                                                                      'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.prepare_experiment_data': ( 'experiment.html#prepare_experiment_data',
                                                                                                      'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.read_json_to_dataframe': ( 'experiment.html#read_json_to_dataframe',
                                                                                                     'orbit_generation/experiment.py'),
                                             'orbit_generation.experiment.setup_new_experiment': ( 'experiment.html#setup_new_experiment',
                                                                                                   'orbit_generation/experiment.py')},
            'orbit_generation.latent_space': { 'orbit_generation.latent_space.compute_centroids': ( 'latent_space.html#compute_centroids',
                                                                                                    'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.compute_medoid': ( 'latent_space.html#compute_medoid',
                                                                                                 'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.geometric_median': ( 'latent_space.html#geometric_median',
                                                                                                   'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.grid_sample': ( 'latent_space.html#grid_sample',
                                                                                              'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.interpolate_sample': ( 'latent_space.html#interpolate_sample',
                                                                                                     'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.linear_interpolation': ( 'latent_space.html#linear_interpolation',
                                                                                                       'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.plot_2d_latent_space': ( 'latent_space.html#plot_2d_latent_space',
                                                                                                       'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.plot_combined_2d_latent_space': ( 'latent_space.html#plot_combined_2d_latent_space',
                                                                                                                'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.plot_linear_regression': ( 'latent_space.html#plot_linear_regression',
                                                                                                         'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.reduce_dimensions_combined_latent_space': ( 'latent_space.html#reduce_dimensions_combined_latent_space',
                                                                                                                          'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.reduce_dimensions_latent_space': ( 'latent_space.html#reduce_dimensions_latent_space',
                                                                                                                 'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.sample_random_distributions': ( 'latent_space.html#sample_random_distributions',
                                                                                                              'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.slerp': ( 'latent_space.html#slerp',
                                                                                        'orbit_generation/latent_space.py'),
                                               'orbit_generation.latent_space.trimmed_mean_centroid': ( 'latent_space.html#trimmed_mean_centroid',
                                                                                                        'orbit_generation/latent_space.py')},
            'orbit_generation.model_factory': { 'orbit_generation.model_factory.get_model': ( 'model_factory.html#get_model',
                                                                                              'orbit_generation/model_factory.py')},
            'orbit_generation.paper': { 'orbit_generation.paper.plot_latent_space_with_feature_distributions_paper': ( 'paper_specific.html#plot_latent_space_with_feature_distributions_paper',
                                                                                                                       'orbit_generation/paper.py')},
            'orbit_generation.path': { 'orbit_generation.path.get_data_path': ('path_utils.html#get_data_path', 'orbit_generation/path.py'),
                                       'orbit_generation.path.get_julia_file_path': ( 'path_utils.html#get_julia_file_path',
                                                                                      'orbit_generation/path.py'),
                                       'orbit_generation.path.get_project_root': ( 'path_utils.html#get_project_root',
                                                                                   'orbit_generation/path.py'),
                                       'orbit_generation.path.make_project_path': ( 'path_utils.html#make_project_path',
                                                                                    'orbit_generation/path.py')},
            'orbit_generation.processing': { 'orbit_generation.processing.add_time_vector_to_orbits': ( 'orbit_processing.html#add_time_vector_to_orbits',
                                                                                                        'orbit_generation/processing.py'),
                                             'orbit_generation.processing.average_downsample_3d_array': ( 'orbit_processing.html#average_downsample_3d_array',
                                                                                                          'orbit_generation/processing.py'),
                                             'orbit_generation.processing.downsample_3d_array': ( 'orbit_processing.html#downsample_3d_array',
                                                                                                  'orbit_generation/processing.py'),
                                             'orbit_generation.processing.interpolate_equal_times': ( 'orbit_processing.html#interpolate_equal_times',
                                                                                                      'orbit_generation/processing.py'),
                                             'orbit_generation.processing.pad_and_convert_to_3d': ( 'orbit_processing.html#pad_and_convert_to_3d',
                                                                                                    'orbit_generation/processing.py'),
                                             'orbit_generation.processing.reorder_orbits': ( 'orbit_processing.html#reorder_orbits',
                                                                                             'orbit_generation/processing.py'),
                                             'orbit_generation.processing.resample_3d_array': ( 'orbit_processing.html#resample_3d_array',
                                                                                                'orbit_generation/processing.py'),
                                             'orbit_generation.processing.segment_and_convert_to_3d': ( 'orbit_processing.html#segment_and_convert_to_3d',
                                                                                                        'orbit_generation/processing.py')},
            'orbit_generation.propagation': { 'orbit_generation.propagation.calculate_errors': ( 'propagation.html#calculate_errors',
                                                                                                 'orbit_generation/propagation.py'),
                                              'orbit_generation.propagation.calculate_errors_per_orbit': ( 'propagation.html#calculate_errors_per_orbit',
                                                                                                           'orbit_generation/propagation.py'),
                                              'orbit_generation.propagation.dynamics_defect': ( 'propagation.html#dynamics_defect',
                                                                                                'orbit_generation/propagation.py'),
                                              'orbit_generation.propagation.eom_cr3bp': ( 'propagation.html#eom_cr3bp',
                                                                                          'orbit_generation/propagation.py'),
                                              'orbit_generation.propagation.jacobi_constant': ( 'propagation.html#jacobi_constant',
                                                                                                'orbit_generation/propagation.py'),
                                              'orbit_generation.propagation.jacobi_test': ( 'propagation.html#jacobi_test',
                                                                                            'orbit_generation/propagation.py'),
                                              'orbit_generation.propagation.prop_node': ( 'propagation.html#prop_node',
                                                                                          'orbit_generation/propagation.py')},
            'orbit_generation.stats': { 'orbit_generation.stats.calculate_overall_spatial_statistics': ( 'orbit_statistics.html#calculate_overall_spatial_statistics',
                                                                                                         'orbit_generation/stats.py'),
                                        'orbit_generation.stats.calculate_per_orbit_spatial_statistics': ( 'orbit_statistics.html#calculate_per_orbit_spatial_statistics',
                                                                                                           'orbit_generation/stats.py'),
                                        'orbit_generation.stats.plot_histograms_comparison': ( 'orbit_statistics.html#plot_histograms_comparison',
                                                                                               'orbit_generation/stats.py'),
                                        'orbit_generation.stats.plot_histograms_position': ( 'orbit_statistics.html#plot_histograms_position',
                                                                                             'orbit_generation/stats.py'),
                                        'orbit_generation.stats.plot_orbit_data_lengths': ( 'orbit_statistics.html#plot_orbit_data_lengths',
                                                                                            'orbit_generation/stats.py'),
                                        'orbit_generation.stats.plot_time_increments': ( 'orbit_statistics.html#plot_time_increments',
                                                                                         'orbit_generation/stats.py')},
            'orbit_generation.trainer': { 'orbit_generation.trainer.train_model': ( 'trainer.html#train_model',
                                                                                    'orbit_generation/trainer.py'),
                                          'orbit_generation.trainer.train_model_with_explicit_validation': ( 'trainer.html#train_model_with_explicit_validation',
                                                                                                             'orbit_generation/trainer.py')},
            'orbit_generation.vae': { 'orbit_generation.vae.AbstractVAE': ('vae.html#abstractvae', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.AbstractVAE.__init__': ( 'vae.html#abstractvae.__init__',
                                                                                     'orbit_generation/vae.py'),
                                      'orbit_generation.vae.AbstractVAE.decode': ('vae.html#abstractvae.decode', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.AbstractVAE.encode': ('vae.html#abstractvae.encode', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.AbstractVAE.forward': ( 'vae.html#abstractvae.forward',
                                                                                    'orbit_generation/vae.py'),
                                      'orbit_generation.vae.AbstractVAE.sample': ('vae.html#abstractvae.sample', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE': ('vae.html#betavae', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.__init__': ('vae.html#betavae.__init__', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.configure_optimizers': ( 'vae.html#betavae.configure_optimizers',
                                                                                             'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.decode': ('vae.html#betavae.decode', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.default_loss_fn': ( 'vae.html#betavae.default_loss_fn',
                                                                                        'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.encode': ('vae.html#betavae.encode', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.forward': ('vae.html#betavae.forward', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.on_train_epoch_start': ( 'vae.html#betavae.on_train_epoch_start',
                                                                                             'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.on_validation_epoch_start': ( 'vae.html#betavae.on_validation_epoch_start',
                                                                                                  'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.reconstruction_loss_by_axis': ( 'vae.html#betavae.reconstruction_loss_by_axis',
                                                                                                    'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.sample': ('vae.html#betavae.sample', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.setup': ('vae.html#betavae.setup', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.training_step': ( 'vae.html#betavae.training_step',
                                                                                      'orbit_generation/vae.py'),
                                      'orbit_generation.vae.BetaVAE.validation_step': ( 'vae.html#betavae.validation_step',
                                                                                        'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE': ('vae.html#cbetavae', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.__init__': ('vae.html#cbetavae.__init__', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.configure_optimizers': ( 'vae.html#cbetavae.configure_optimizers',
                                                                                              'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.decode': ('vae.html#cbetavae.decode', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.default_loss_fn': ( 'vae.html#cbetavae.default_loss_fn',
                                                                                         'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.encode': ('vae.html#cbetavae.encode', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.forward': ('vae.html#cbetavae.forward', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.on_train_epoch_start': ( 'vae.html#cbetavae.on_train_epoch_start',
                                                                                              'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.on_validation_epoch_start': ( 'vae.html#cbetavae.on_validation_epoch_start',
                                                                                                   'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.reconstruction_loss_by_axis': ( 'vae.html#cbetavae.reconstruction_loss_by_axis',
                                                                                                     'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.sample': ('vae.html#cbetavae.sample', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.setup': ('vae.html#cbetavae.setup', 'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.training_step': ( 'vae.html#cbetavae.training_step',
                                                                                       'orbit_generation/vae.py'),
                                      'orbit_generation.vae.cBetaVAE.validation_step': ( 'vae.html#cbetavae.validation_step',
                                                                                         'orbit_generation/vae.py')},
            'orbit_generation.visualize': { 'orbit_generation.visualize.create_image_grid_from_routes': ( 'visualization.html#create_image_grid_from_routes',
                                                                                                          'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.export_dynamic_orbits_html': ( 'visualization.html#export_dynamic_orbits_html',
                                                                                                       'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_3d_points': ( 'visualization.html#plot_3d_points',
                                                                                           'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_corr_matrix': ( 'visualization.html#plot_corr_matrix',
                                                                                             'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_grouped_features': ( 'visualization.html#plot_grouped_features',
                                                                                                  'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_histogram': ( 'visualization.html#plot_histogram',
                                                                                           'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_mean_distance_by_group_column': ( 'visualization.html#plot_mean_distance_by_group_column',
                                                                                                               'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_single_image': ( 'visualization.html#plot_single_image',
                                                                                              'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.plot_value_proportions': ( 'visualization.html#plot_value_proportions',
                                                                                                   'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.summarize_and_test': ( 'visualization.html#summarize_and_test',
                                                                                               'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.visualize_orbits_comparison': ( 'visualization.html#visualize_orbits_comparison',
                                                                                                        'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.visualize_orbits_minimal': ( 'visualization.html#visualize_orbits_minimal',
                                                                                                     'orbit_generation/visualize.py'),
                                            'orbit_generation.visualize.visualize_static_orbits': ( 'visualization.html#visualize_static_orbits',
                                                                                                    'orbit_generation/visualize.py')}}}
