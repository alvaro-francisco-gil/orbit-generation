"""Physical constants used in the project"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/14_path_utils.ipynb.

# %% auto 0
__all__ = ['get_project_root', 'get_data_path', 'make_project_path', 'get_julia_file_path']

# %% ../nbs/14_path_utils.ipynb 2
from pathlib import Path
import os

# %% ../nbs/14_path_utils.ipynb 4
def get_project_root() -> Path:
    """
    Get the project root directory by searching for settings.ini or setup.py files.
    """
    # Try to find the root by looking for setup.py or settings.ini
    current = Path(os.getcwd()).resolve()
    
    # Keep going up until we find settings.ini or hit the root
    while current != current.parent:
        if (current / 'settings.ini').exists():
            return current
        if (current / 'setup.py').exists():
            return current
        current = current.parent
    
    # If we're in a notebook in nbs/, the parent directory is the root
    if 'nbs' in str(current):
        return current.parent
    
    raise FileNotFoundError("Could not find project root directory")

def get_data_path() -> Path:
    """
    Get the path to the data directory.
    """
    return get_project_root() / 'data'

def make_project_path(*parts: str,  # Path components to join
                     ) -> Path:
    """
    Create a path relative to the project root.
    """
    return get_project_root().joinpath(*parts)

def get_julia_file_path(filename: str,  # Name of the Julia file
                       ) -> str:
    """
    Get the absolute path to a Julia file in the project's julia directory.
    """
    root = get_project_root()
    return str(root / 'julia' / filename)
